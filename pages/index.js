import Head from "next/head";
import { useEffect, useState } from "react";

export default function Home() {
  const [days, setDays] = useState("");
  const [hour, setHour] = useState("");
  const [minute, setMinute] = useState("");
  const [second, setSecond] = useState("");
  const [AmPm, setAmPm] = useState("");

  const getTime = () => {
    let date = new Date();

    //get each info
    let day = date.getDay();
    let hours = date.getHours();
    let minutes = date.getMinutes();
    let seconds = date.getSeconds();

    //define am or pm
    const amPm = hours < 12 ? "AM" : "PM";

    //change 24h format into 12h
    hours = hours > 12 ? hours - 12 : hours;

    //make 2 digits time by adding 0 while only 1 digit
    hours = ("0" + hours).slice(-2);
    minutes = ("0" + minutes).slice(-2);
    seconds = ("0" + seconds).slice(-2);

    //change number day into dayname in string
    let dayName = "";
    if (day == 1) {
      dayName = "Monday";
    }
    if (day == 2) {
      dayName = "Tuesday";
    }
    if (day == 3) {
      dayName = "Wednesday";
    }
    if (day == 4) {
      dayName = "Thursday";
    }
    if (day == 5) {
      dayName = "Friday";
    }
    if (day == 6) {
      dayName = "Saturday";
    }
    if (day == 7) {
      dayName = "Sunday";
    }

    setTimeout(getTime, 100);

    //set into state
    setDays(dayName);
    setHour(hours);
    setMinute(minutes);
    setSecond(seconds);
    setAmPm(amPm);
  };

  useEffect(() => {
    getTime();
  }, []);

  return (
    <div className="">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="">
        <div className="flex gap-10 min-h-screen justify-center items-center text-6xl font-bold text-slate-100 bg-slate-600">
          <div className="flex md:flex-row flex-wrap gap-10 p-5 pb-20 rounded-3xl bg-slate-900">
            <div className="relative z-50 before:absolute before:content-['Day'] before:-bottom-10 before:text-xl before:left-1/2 before:-translate-x-1/2  before:bg-gradient-to-r before:from-fuchsia-600 before:to-emerald-600 before:text-transparent before:bg-clip-text">
              {days}
            </div>
            <div className="relative z-50 before:absolute before:content-['Hours'] before:-bottom-10 before:text-xl before:left-1/2 before:-translate-x-1/2 before:bg-gradient-to-r before:from-fuchsia-600 before:to-emerald-600 before:text-transparent before:bg-clip-text">
              {hour}
            </div>
            <span>:</span>
            <div className="relative z-50 before:absolute before:content-['Minutes'] before:-bottom-10 before:text-xl before:left-1/2 before:-translate-x-1/2 before:bg-gradient-to-r before:from-fuchsia-600 before:to-emerald-600 before:text-transparent before:bg-clip-text">
              {minute}
            </div>
            <span>:</span>
            <div className="relative z-50 before:absolute before:content-['Seconds'] before:-bottom-10 before:text-xl before:left-1/2 before:-translate-x-1/2 before:bg-gradient-to-r before:from-fuchsia-600 before:to-emerald-600 before:text-transparent before:bg-clip-text">
              {second}
            </div>
            <span>:</span>
            <div className="">{AmPm}</div>
          </div>
        </div>
      </main>
    </div>
  );
}
